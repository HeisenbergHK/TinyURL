name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          DJANGO_ALLOWED_HOSTS: "0.0.0.0,127.0.0.1,localhost"
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_NAME: testdb
      DB_USER: testuser
      DB_PASSWORD: testpass
      DB_HOST: localhost
      DB_PORT: 5432
      SECRET_KEY: dummysecret
      DJANGO_ALLOWED_HOSTS: "0.0.0.0,127.0.0.1,localhost"
      DEBUG: "True"

    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for DB
      run: |
        sudo apt-get update && sudo apt-get install -y postgresql-client
        until pg_isready -h localhost -p 5432; do sleep 5; done

    - name: Apply Migrations
      run: |
        python manage.py migrate

    - name: Run Tests
      run: |
        python manage.py test

    - name: Test Gunicorn Run
      run: |
        pip install gunicorn
        gunicorn TinyURL.wsgi:application --bind 0.0.0.0:8000 --timeout 30 --workers 2 &
        sleep 5
        curl --fail http://localhost:8000 || (echo "Gunicorn failed to start" && exit 1)
